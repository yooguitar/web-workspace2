<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 전체가 mapper로 감싸져있어야함 -->
<!-- namespace : 해당 mapper의 고유한 별칭(중복이 있으면 안됨) -->
<mapper namespace="memberMapper">

	<!-- * DML일 경우 <insert id="각 SQL문의 식별자" parameterType="SQL문을 실행할 때 필요한 자바타입(풀클래스명) 
		혹은 별칭"> 쿼리문 </insert> <update></update> <delete></delete> * SELECT문일 경우 <select 
		id="각 SQL문의 식별자" parameterType="SQL문을 실행할 때 필요한 자바타입(풀클래스명) 혹은 별칭" resultType="조회결과를 
		반환하는 자바타입" 또는 resultMap="조회결과를 뽑아서 매핑할 resultMap의 id"> 쿼리문 </select> => parameterType속성은 
		전달받을 값이 없다면 생략도 가능 => SELECT문의 경우 결과가 다양한 형태로 반환될 수 있기 때문에 == count(*) => 
		정수 / 중복체크 => 문자열 => 반드시 resultType(자바에서 제공하는 자료형) 또는 => resultMap(내가 만든 resultMap 
		id)으로 결과따른 타입을 지정해줘야함!! 그동안 pstmt 객체를 이용해서 ?를 사용했지만, 앞으로는 위치홀더 대신 해당 SQL문에 
		전달된 객체로부터 값을 꺼내서 사용 => 내부적으로 getter 메소드 호출 값을 꺼내는 방법 #{ 필드명 또는 변수명 또는 map의 
		키값}을 이용 -->

	<insert id="insertMember"
		parameterType="com.kh.ssuper.member.model.vo.Member">
		INSERT
		INTO
		MEMBER
		(
		USER_NO,
		USER_ID,
		USER_PWD,
		USER_NAME,
		EMAIL,
		INTEREST
		)
		VALUES
		(
		SEQ_UNO.NEXTVAL,
		#{userId},
		#{userPwd},
		#{userName},
		#{email},
		#{interest}
		)

	</insert>

	<!-- * resultMap : 마이바티스에서 가장 중요하고 강력한 요소 ResultSet으로부터 조회한 컬럼의 값을 하나씩 뽑아서 
		내가 지정한 VO객체의 각 필드에 담는 JDBC코드를 줄여주는 역할 수행 resultSet 조회 결과를 조건검사하여 set하는 작업을 
		대체함 <resultMap id="식별자" type="조회결과를 담아서 반환하고자하는 VO객체의 타입(풀클래스명)혹은 별칭"> <result 
		column="조회된 결과를 뽑고자 하는 DB컬럼명" property="해당 결과를 담는 필드명" /> 예시) <result column="USER_NO" 
		property="userNo" /> </resultMap> 선택사항 = PK는 <id> 속성을 사용하면 성능에 도움이 됨. <result> 
		사용해도 무관 -->


	<!-- *작동 원리 선택한 클래스의 기본생성자를 호출하고(없을경우 예외 발생) 내부적으로 필드에 대한 setter메소드를 호출 -->
	<!-- <resultMap id="memberResultSet" type="member"> <id column="USER_NO" 
		property="userNo" /> <result column="USER_ID" property="userId" /> <result 
		column="USER_PWD" property="userPwd" /> <result column="USER_NAME" property="userName" 
		/> <result column="EMAIL" property="email" /> <result column="INTEREST" property="interest" 
		/> <result column="ENROLL_DATE" property="enrollDate" /> <result column="MODIFY_DATE" 
		property="modifyDate" /> <result column="STATUS" property="status" /> </resultMap> -->

	<select id="login" parameterType="member" resultType="member">
		<!-- resultMap="memberResultSet"> -->
		SELECT
		USER_NO as userNo,
		USER_ID as userId,
		USER_PWD as userPwd,
		USER_NAME as userName,
		EMAIL,
		INTEREST,
		ENROLL_DATE,
		MODIFY_DATE,
		STATUS
		FROM
		MEMBER
		WHERE
		USER_ID = #{userId}
		AND
		USER_PWD = #{userPwd}
		AND
		STATUS = 'Y'

	</select>




</mapper>